<?php

namespace Platformsh\Cli\SiteAlias;

use Platformsh\Client\Model\Project;

class DrushPhp extends DrushAlias
{
    /**
     * {@inheritdoc}
     */
    protected function getFilename(string $groupName): string
    {
        return $this->drush->getSiteAliasDir() . '/' . $groupName . '.aliases.drushrc.php';
    }

    /**
     * {@inheritdoc}
     */
    protected function formatAliases(array $aliases): string
    {
        $formatted = [];
        foreach ($aliases as $aliasName => $newAlias) {
            $formatted[] = sprintf(
                "\$aliases['%s'] = %s;\n",
                str_replace("'", "\\'", $aliasName),
                var_export($newAlias, true)
            );
        }

        return implode("\n", $formatted);
    }

    /**
     * {@inheritdoc}
     */
    protected function normalize(array $aliases): array
    {
        return $this->swapKeys($aliases, [
            'host' => 'remote-host',
            'user' => 'remote-user',
        ]);
    }

    /**
     * {@inheritdoc}
     */
    protected function getHeader(Project $project): string
    {
        $tpl = <<<EOT
            <?php
            /**
             * Drush aliases for the %s project "%s".
             *
             * This file is auto-generated by the %s.
             *
             * WARNING
             * This file may be regenerated at any time.
             * - User-defined aliases will be preserved.
             * - Aliases for active environments (including any custom additions) will be preserved.
             * - Aliases for deleted or inactive environments will be deleted.
             * - All other information will be deleted.
             */
            EOT;

        return sprintf($tpl, $this->config->getStr('service.name'), $project->title, $this->config->getStr('application.name'));
    }
}
