<?php

namespace Platformsh\Cli\Command;

use Platformsh\Cli\Exception\RootNotFoundException;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\Yaml\Yaml;

class LocalShortcutCommand extends PlatformCommand
{
    /**
     * {@inheritdoc}
     */
    protected function configure()
    {
        $this
          ->setName('local:shortcut')
          ->setAliases(['shortcut'])
          ->addArgument('name', InputArgument::REQUIRED, 'The shortcut name')
          ->setDescription('Create a shortcut for the current project');
    }

    public function isLocal()
    {
        return true;
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        if (!$this->getProjectRoot()) {
            throw new RootNotFoundException();
        }

        $this->validateInput($input, $output);

        $name = $input->getArgument('name');
        $name = preg_replace('#[/ @]+#', '-', ltrim($name, '@'));

        $project = $this->getSelectedProject();

        $newShortcut = [
          'root' => $this->getProjectRoot(),
          'id' => $project->id,
        ];

        $host = parse_url($project->getUri(), PHP_URL_HOST);
        if ($host) {
            $newShortcut['host'] = $host;
        }

        $newShortcutFile = $this->homeDir . '/.platformsh/shortcuts/' . $name . '.yaml';

        $yaml = new Yaml();

        if (file_exists($newShortcutFile)) {
            $output->writeln("File exists: $newShortcutFile");
            $questionHelper = $this->getHelper('question');
            if (!$questionHelper->confirm("Overwrite?", $input, $output)) {
                return 1;
            }
            $currentShortcut = (array) $yaml->parse(file_get_contents($newShortcutFile));
            $newShortcut = array_replace_recursive($currentShortcut, $newShortcut);
        }

        $comments = "# Shortcut for the project: \"{$project->title}\""
          . "\n#"
          . "\n# This file is auto-generated by the Platform.sh CLI."
          . "\n\n";

        $newShortcutYaml = $yaml->dump($newShortcut);

        $fs = new Filesystem();
        $fs->dumpFile($newShortcutFile, $comments . $newShortcutYaml);

        $output->writeln("Created shortcut <info>@$name</info> in file: $newShortcutFile");

        return 0;
    }
}
