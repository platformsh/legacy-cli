# Services are classes providing functionality needed in multiple places.
#
# See https://symfony.com/doc/3.4/service_container.html
#
# Public services can be accessed from the CommandBase->getService() method.
# Private services are only used by other services, via dependency injection.
services:
    _defaults:
        # Services are public by default.
        public: true

        # Auto-wiring is disabled for simplicity (at least because the @input
        # and @output services will be overridden).
        autowire: false

        # Auto-configuring is not necessary.
        autoconfigure: false

    activity_loader:
        class:     '\Platformsh\Cli\Service\ActivityLoader'
        arguments: ['@output']

    activity_monitor:
        class:     '\Platformsh\Cli\Service\ActivityMonitor'
        arguments: ['@output', '@config', '@api']

    api:
        class:     '\Platformsh\Cli\Service\Api'
        arguments: ['@config', '@cache', '@output', '@token_config']

    app_finder:
      class:     '\Platformsh\Cli\Local\ApplicationFinder'
      arguments: ['@config']

    cache:
        class:     '\Doctrine\Common\Cache\CacheProvider'
        factory:   'cache_factory:createCacheProvider'
        arguments: ['@config']

    cache_factory:
        class:     '\Platformsh\Cli\Service\CacheFactory'
        public:    false

    certifier:
      class:     '\Platformsh\Cli\SshCert\Certifier'
      arguments: ['@api', '@config', '@shell', '@fs', '@output']

    config:
        class:     '\Platformsh\Cli\Service\Config'

    curl_cli:
      class:     '\Platformsh\Cli\Service\CurlCli'
      arguments: ['@api']

    drush:
        class:     '\Platformsh\Cli\Service\Drush'
        arguments: ['@config', '@shell', '@local.project', '@api', '@app_finder']

    fs:
        class:     '\Platformsh\Cli\Service\Filesystem'
        arguments: ['@shell']

    git:
        class:     '\Platformsh\Cli\Service\Git'
        arguments: ['@shell']

    git_data_api:
        class:     '\Platformsh\Cli\Service\GitDataApi'
        arguments: ['@api', '@cache']

    identifier:
        class:     '\Platformsh\Cli\Service\Identifier'
        arguments: ['@config', '@api', '@output', '@cache']

    local.build:
        class:     '\Platformsh\Cli\Local\LocalBuild'
        arguments: ['@config', '@output', '@shell', '@fs', '@git', '@local.dependency_installer', '@app_finder']

    local.dependency_installer:
        class:     '\Platformsh\Cli\Local\DependencyInstaller'
        arguments: ['@output', '@shell']
        public:    false

    local.project:
        class:     '\Platformsh\Cli\Local\LocalProject'
        arguments: ['@config', '@git']

    mount:
        class:     '\Platformsh\Cli\Service\Mount'

    output:
        class:     '\Symfony\Component\Console\Output\ConsoleOutput'
        public:    false

    property_formatter:
        class:     '\Platformsh\Cli\Service\PropertyFormatter'
        arguments: ['@input']

    question_helper:
        class:     '\Platformsh\Cli\Service\QuestionHelper'
        arguments: ['@input', '@output']

    remote_env_vars:
        class:     '\Platformsh\Cli\Service\RemoteEnvVars'
        arguments: ['@ssh', '@cache', '@config']
        public:    false

    relationships:
        class:     '\Platformsh\Cli\Service\Relationships'
        arguments: ['@remote_env_vars']

    rsync:
      class:     '\Platformsh\Cli\Service\Rsync'
      arguments: ['@shell', '@ssh', '@ssh_diagnostics']

    self_updater:
        class:     '\Platformsh\Cli\Service\SelfUpdater'
        arguments: ['@input', '@output', '@config', '@question_helper']

    shell:
        class:     '\Platformsh\Cli\Service\Shell'
        arguments: ['@output']

    ssh:
        class:     '\Platformsh\Cli\Service\Ssh'
        arguments: ['@input', '@output', '@certifier', '@ssh_config', '@ssh_key']

    ssh_config:
        class:     '\Platformsh\Cli\Service\SshConfig'
        arguments: ['@config', '@fs', '@output', '@ssh_key', '@certifier']

    ssh_diagnostics:
      class:     '\Platformsh\Cli\Service\SshDiagnostics'
      arguments: ['@ssh', '@output', '@certifier', '@ssh_key', '@api', '@config']

    ssh_key:
        class:     '\Platformsh\Cli\Service\SshKey'
        arguments: ['@config', '@api', '@output']

    state:
        class:     '\Platformsh\Cli\Service\State'
        arguments: ['@config']

    table:
        class:     '\Platformsh\Cli\Service\Table'
        arguments: ['@input', '@output']

    token_config:
      class:       '\Platformsh\Cli\Service\TokenConfig'
      arguments:   ['@config']

    url:
        class:     '\Platformsh\Cli\Service\Url'
        arguments: ['@shell', '@input', '@output']
